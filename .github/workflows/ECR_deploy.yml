name: Build on GitHub Actions and Deploy to AWS

on:
  push:
    branches:
      - master
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

#      - name: Set AWS CLI credentials
#        run: |
#          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Build Podman image
        run: podman build -t ${{ secrets.AWS_REGISTRY_URL }}/poc-demo-app:latest .

      - name: Authenticate with Amazon ECR
        run: |
          ECR_TOKEN=$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }})
          echo $ECR_TOKEN | podman login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}

      - name: Push Podman image to Amazon ECR
        run: podman push ${{ secrets.AWS_REGISTRY_URL }}/poc-demo-app:latest

      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            podman stop poc-demo-app || true 
            podman rm poc-demo-app || true 
            podman rmi ${{ secrets.AWS_REGISTRY_URL }}/poc-demo-app:latest || true 
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | podman login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}
            podman pull ${{ secrets.AWS_REGISTRY_URL }}/poc-demo-app:latest
            podman run -d --name poc-demo-app -p 8081:8081 -v ./logs:/app/logs ${{ secrets.AWS_REGISTRY_URL }}/poc-demo-app:latest
